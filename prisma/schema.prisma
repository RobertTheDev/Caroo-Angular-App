// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  colour          String
  description     String?
  doors           Int
  driveType       String
  engineSizeTotal Int
  engineSizeUnit  String
  fuelType        String
  gearbox         String
  make            String
  mileageTotal    Int
  mileageUnit     String
  model           String
  ownerId         String
  priceCurrency   String
  priceTotal      Int
  seats           Int
  year            Int

  images     CarImage[]
  owners     CarOwner[]
  requests   CarRequest[]
  usersSaved SavedCar[]
}

model CarImage {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  alt   String
  carId String?
  url   String

  car Car? @relation(fields: [carId], references: [id])
}

model CarOwner {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carId  String
  userId String

  car  Car  @relation(fields: [carId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model CarRequest {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carId   String
  message String?
  status  String
  userId  String

  car  Car  @relation(fields: [carId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model SavedCar {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carId  String
  userId String

  car  Car  @relation(fields: [carId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model User {
  id        String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  avatar                   String?
  emailAddress             String    @unique
  emailVerified            DateTime?
  firstName                String
  lastName                 String
  password                 String
  passwordResetToken       String?   @unique
  passwordResetTokenExpiry DateTime?
  verifyEmailToken         String?   @unique
  verifyEmailTokenExpiry   DateTime?

  carRequests CarRequest[]
  ownedCars   CarOwner[]
  savedCars   SavedCar[]
}
